{
  "root": true,
  "env": {
    "browser": false,
    "es2021": false,
    "node": true
  },
  "plugins": ["@typescript-eslint", "unicorn", "require-extensions", "import"],
  "parser": "@typescript-eslint/parser",
  "extends": [
    "eslint:recommended",
    "plugin:@typescript-eslint/strict-type-checked",
    "plugin:@typescript-eslint/stylistic-type-checked",
    "plugin:import/recommended",
    "plugin:import/typescript",
    "plugin:unicorn/recommended",
    "plugin:require-extensions/recommended",
    "plugin:prettier/recommended"
  ],
  "parserOptions": {
    "ecmaVersion": "latest",
    "sourceType": "module",
    "project": true
  },
  "rules": {
    "unicorn/no-process-exit": 0,
    "unicorn/filename-case": 2,
    "no-use-before-define": 0,
    "import/order": [
      "error",
      {
        "newlines-between": "always",
        "named": true,
        "alphabetize": {
          "order": "asc",
          "caseInsensitive": true
        }
      }
    ],
    "import/no-unresolved": 2,
    "import/no-cycle": 2,
    "import/newline-after-import": 2,
    "import/no-extraneous-dependencies": 2,
    "@typescript-eslint/consistent-type-imports": 2,
    "@typescript-eslint/no-floating-promises": [
      "error",
      {
        "ignoreVoid": false
      }
    ],
    "@typescript-eslint/naming-convention": [
      "error",
      {
        "selector": "default",
        "leadingUnderscore": "forbid",
        "trailingUnderscore": "forbid",
        "format": ["camelCase"]
      },
      {
        "selector": ["class", "interface", "enum", "typeAlias"],
        "format": ["PascalCase"]
      },
      {
        "selector": ["typeParameter"],
        "format": null,
        "custom": {
          "match": true,
          "regex": "^([A-Z])$"
        }
      },
      {
        "selector": ["import"],
        "filter": {
          "match": false,
          "regex": "(fs|http|console|process|path|assert)"
        },
        "format": null,
        "custom": {
          "match": true,
          "regex": "^([A-Z]{1,3}[a-z0-9]+)+$"
        }
      },
      {
        "selector": ["classProperty"],
        "format": null,
        "custom": {
          "match": true,
          "regex": "^([A-Z]{1,3}[a-z0-9]+)+$"
        },
        "modifiers": ["static"]
      },
      {
        "selector": ["variable"],
        "format": ["PascalCase", "camelCase"],
        "modifiers": ["const"]
      },
      {
        "selector": ["variable"],
        "format": null,
        "custom": {
          "match": true,
          "regex": "^([A-Z]{1,3}[a-z0-9]+)+$"
        },
        "modifiers": ["const", "global"]
      },
      {
        "selector": ["enumMember"],
        "format": null,
        "custom": {
          "match": true,
          "regex": "^([A-Z]{1,3}[a-z0-9]+)+$"
        }
      }
    ],
    "@typescript-eslint/restrict-template-expressions": [
      "error",
      {
        "allowNumber": true
      }
    ],
    "unicorn/no-useless-undefined": [
      "error",
      {
        "checkArguments": false,
        "checkArrowFunctionBody": false
      }
    ],
    "import/no-restricted-paths": [
      "error",
      {
        "zones": [
          {
            "target": "src/common",
            "from": ["src/instance", "src/plugins", "src/types", "src/util"],
            "message": "Common files are used as public api and must not reference internal files"
          },
          {
            "target": "src/plugins",
            "from": ["src/plugins", "src/types"],
            "message": "Plugin files must not reference other plugins or outside files"
          },
          {
            "target": "src/types",
            "from": ["src"],
            "message": "Type files must only reference published libraries"
          },
          {
            "target": "src/util",
            "from": ["src/instance", "src/plugins", "src/types"],
            "message": "Util must only reference other common files. Specific util can be put in their respective instance common dir."
          },

          {
            "target": "src/instance/commands",
            "from": [
              "src/plugins",
              "src/types",
              "src/instance/discord",
              "src/instance/logger",
              "src/instance/metrics",
              "src/instance/minecraft",
              "src/instance/socket"
            ],
            "message": "Instance must only access itself and common files"
          },
          {
            "target": "src/instance/discord",
            "from": [
              "src/plugins",
              "src/types",
              "src/instance/commands",
              "src/instance/logger",
              "src/instance/metrics",
              "src/instance/minecraft",
              "src/instance/socket"
            ],
            "message": "Instance must only access itself and common files"
          },
          {
            "target": "src/instance/logger",
            "from": [
              "src/plugins",
              "src/types",
              "src/instance/commands",
              "src/instance/discord",
              "src/instance/metrics",
              "src/instance/minecraft",
              "src/instance/socket"
            ],
            "message": "Instance must only access itself and common files"
          },
          {
            "target": "src/instance/metrics",
            "from": [
              "src/plugins",
              "src/types",
              "src/instance/commands",
              "src/instance/discord",
              "src/instance/logger",
              "src/instance/minecraft",
              "src/instance/socket"
            ],
            "message": "Instance must only access itself and common files"
          },
          {
            "target": "src/instance/minecraft",
            "from": [
              "src/plugins",
              "src/types",
              "src/instance/commands",
              "src/instance/discord",
              "src/instance/logger",
              "src/instance/metrics",
              "src/instance/socket"
            ],
            "message": "Instance must only access itself and common files"
          },
          {
            "target": "src/instance/socket",
            "from": [
              "src/plugins",
              "src/types",
              "src/instance/commands",
              "src/instance/discord",
              "src/instance/logger",
              "src/instance/metrics",
              "src/instance/minecraft"
            ],
            "message": "Instance must only access itself and common files"
          }
        ]
      }
    ]
  },
  "settings": {
    "import/parsers": {
      "@typescript-eslint/parser": [".ts", ".tsx"]
    },
    "import/resolver": {
      "typescript": {
        "alwaysTryTypes": true
      }
    }
  }
}
