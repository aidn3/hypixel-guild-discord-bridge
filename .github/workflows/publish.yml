name: Build and deploy
run-name: Building and pushing ${{ inputs.tag_name }}

on:
  workflow_dispatch:
    inputs:
      tag_name:
        description: "Version name; e.g. 1.0.0; DON'T PUT A V IN FRONT OF IT"
        required: true
      release:
        description: 'Whether to create a GitHub Release'
        type: boolean
        default: true
      docker_push:
        description: 'Whether to push the Docker image to the registry'
        type: boolean
        default: true
      bypass_cache:
        type: boolean
        default: false
        description: "Disable docker build's use of cache"
      platforms:
        type: string
        default: linux/amd64
        description: Platforms, comma separated

concurrency:
  group: ${{ github.repository }}
  cancel-in-progress: true

env:
  IMAGE: ghcr.io/aidn3/hypixel-guild-discord-bridge
  VERSION_TAG: ${{ inputs.tag_name }}

jobs:
  validate_input:
    runs-on: ubuntu-latest
    steps:
      - name: Validate tagname
        id: validate_input
        run: |
          if [[ ${{ env.VERSION_TAG }} =~ ^v ]]; then
              echo "Tag name should not start with a v"
              exit 1
          fi
          if ! [[ ${{ env.VERSION_TAG }} =~ ^[0-9]\.[0-9]{1,2}\.[0-9]{1,2}$ ]]; then
              echo "Version tag does not match the pattern."
              exit 1
          fi
      - name: Validate platforms
        run: |
          if ! [[ ${{ inputs.platforms }} =~ ^(linux\/(amd64|arm64))(,*(linux\/(amd64|arm64)))?$ ]]; then
              echo "Target platform does not match the patterns, it should be one (or more) of 'linux/amd64', 'linux/arm64', comma separated, no spaces"
          fi

  build_docker:
    needs: validate_input
    permissions:
      contents: read
      packages: write

    runs-on: ubuntu-latest
    if: inputs.docker_push
    strategy:
      fail-fast: true
    steps:
      - name: Checkout
        uses: actions/checkout@v4

      - name: Set up Docker Buildx
        uses: docker/setup-buildx-action@v3

      - name: Login to Docker registry
        uses: docker/login-action@v3
        with:
          registry: ghcr.io
          username: ${{ github.actor }}
          password: ${{ secrets.GITHUB_TOKEN }}

      - name: Extract metadata
        id: meta
        uses: docker/metadata-action@v5
        with:
          images: ${{ env.IMAGE }}
          tags: |
            type=raw,priority=3,value=${{ env.VERSION_TAG }}
            type=raw,priority=2,value=latest
        env:
          DOCKER_METADATA_ANNOTATIONS_LEVELS: manifest,index

      - name: Build and push
        uses: docker/build-push-action@v5
        with:
          file: Dockerfile
          context: .
          push: true
          no-cache: ${{ inputs.bypass_cache }}
          platforms: ${{ inputs.platforms }}
          tags: ${{ steps.meta.outputs.tags }}
          annotations: ${{ steps.meta.outputs.annotations }}
          cache-from: type=gha
          cache-to: type=gha,mode=max

  create_release:
    runs-on: ubuntu-latest
    if: inputs.release
    needs: build_docker

    permissions:
      contents: write

    steps:
      - name: Create Release
        id: create_release
        uses: softprops/action-gh-release@v2
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
        with:
          name: v${{ env.VERSION_TAG }} Release
          tag_name: v${{ env.VERSION_TAG }}
          draft: true
          generate_release_notes: true
          target_commitish: ${{ github.sha }}
